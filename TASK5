import json
import os

CONTACTS_FILE = "contacts.json"

# Load existing contacts
def load_contacts():
    if os.path.exists(CONTACTS_FILE):
        with open(CONTACTS_FILE, "r") as f:
            return json.load(f)
    return []

# Save contacts to file
def save_contacts(contacts):
    with open(CONTACTS_FILE, "w") as f:
        json.dump(contacts, f, indent=4)

# Add a new contact
def add_contact():
    name = input("Enter Name: ")
    phone = input("Enter Phone Number: ")
    email = input("Enter Email: ")
    address = input("Enter Address: ")

    contacts = load_contacts()
    contacts.append({
        "name": name,
        "phone": phone,
        "email": email,
        "address": address
    })

    save_contacts(contacts)
    print("Contact added successfully!")

# View all contacts
def view_contacts():
    contacts = load_contacts()
    if not contacts:
        print("No contacts found.")
        return

    print("\n--- Contact List ---")
    for i, contact in enumerate(contacts, 1):
        print(f"\nContact {i}:")
        print(f"Name   : {contact['name']}")
        print(f"Phone  : {contact['phone']}")
        print(f"Email  : {contact['email']}")
        print(f"Address: {contact['address']}")

# Search contact by name or phone
def search_contact():
    keyword = input("Enter name or phone to search: ").lower()
    contacts = load_contacts()
    found = False

    for contact in contacts:
        if keyword in contact['name'].lower() or keyword in contact['phone']:
            print("\n--- Contact Found ---")
            print(f"Name   : {contact['name']}")
            print(f"Phone  : {contact['phone']}")
            print(f"Email  : {contact['email']}")
            print(f"Address: {contact['address']}")
            found = True
            break

    if not found:
        print("No matching contact found.")

# Update contact
def update_contact():
    name = input("Enter the name of the contact to update: ").lower()
    contacts = load_contacts()
    for contact in contacts:
        if contact['name'].lower() == name:
            print("Leave blank to keep existing value.")

            new_phone = input(f"New Phone (current: {contact['phone']}): ") or contact['phone']
            new_email = input(f"New Email (current: {contact['email']}): ") or contact['email']
            new_address = input(f"New Address (current: {contact['address']}): ") or contact['address']

            contact['phone'] = new_phone
            contact['email'] = new_email
            contact['address'] = new_address

            save_contacts(contacts)
            print("Contact updated successfully!")
            return

    print("Contact not found.")

# Delete contact
def delete_contact():
    name = input("Enter the name of the contact to delete: ").lower()
    contacts = load_contacts()
    new_contacts = [c for c in contacts if c['name'].lower() != name]

    if len(contacts) == len(new_contacts):
        print("Contact not found.")
    else:
        save_contacts(new_contacts)
        print("Contact deleted successfully!")

# Menu
def main():
    while True:
        print("\n====== CONTACT BOOK ======")
        print("1. Add Contact")
        print("2. View Contact List")
        print("3. Search Contact")
        print("4. Update Contact")
        print("5. Delete Contact")
        print("6. Exit")

        choice = input("Enter your choice (1-6): ")

        if choice == "1":
            add_contact()
        elif choice == "2":
            view_contacts()
        elif choice == "3":
            search_contact()
        elif choice == "4":
            update_contact()
        elif choice == "5":
            delete_contact()
        elif choice == "6":
            print("Exiting Contact Book. Goodbye!")
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()
